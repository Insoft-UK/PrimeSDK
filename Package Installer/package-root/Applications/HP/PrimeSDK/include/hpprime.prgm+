#ifndef __pplplus
// The MIT License (MIT)
//
// Copyright (c) 2023-2025 Insoft. All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
#endif

#ifndef HPPRIME_PPLIB
#define HPPRIME_PPLIB

#define MOUSE_X 2
#define MOUSE_Y 3

#define view    VIEW
#define freeze  FREEZE
#define kill    KILL
#define eval    EVAL

dict Width := 320, Height := 240, Top := 0, Middle := 119, Bottom := 239, Left := 0, Centre := 159, Right := 319 @Screen;

alias @arc := ARC_P;
alias @blit := BLIT_P;
alias @dimgrob := DIMGROB_P;
alias @getpix := GETPIX_P;
alias @invert := INVERT_P;
alias @line := LINE_P;
alias @pixoff := PIXOFF_P;
alias @pixon := PIXON_P;
alias @rect := RECT_P;
alias @fillpoly := FILLPOLY_P;
alias @subgrob := SUBGROB_P;
alias @textout := TEXTOUT_P;
alias @textsize := TEXTSIZE;

regex @`\b(G\d)\.width\b` GROBW_P($1)
regex @`\b(G\d)\.height\b` GROBH_P($1)

alias @arc_c := ARC;
alias @blit_c := BLIT;
alias @dimgrob_c := DIMGROB;
alias @getpix_c := GETPIX;
alias @invert_c := INVERT;
alias @line_c := LINE;
alias @pixoff_c := PIXOFF;
alias @pixon_c := PIXON;
alias @rect_c := RECT;
alias @fillpoly_c := FILLPOLY;
alias @subgrob_c := SUBGROB;
alias @textout_c := TEXTOUT;

regex @`\bcartesian::(G\d)\.width\b` GROBW($1)
regex @`\bcartesian::(G\d)\.height\b` GROBH($1)

#endif
